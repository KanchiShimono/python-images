name: Build

on:
  push:
    branches:
      - "main"
  pull_request:
    paths:
      - "*"

jobs:
  check-outdated:
    name: Check outdated
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Fetch latest version and apply template
        run: |
          versions="$(jq -r 'keys | join(" ")' versions.json)"
          ./versions.sh ${versions}

      - name: Setup | Apply template
        run: |
          ./apply-templates.sh

      - name: Check | Outdated
        run: |
          status=$(git status --short)
          [ -z "${status}" ]

  generate-jobs:
    name: Generate jobs
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-jobs.outputs.matrix }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Generate | Jobs
        id: generate-jobs
        run: |
          matrix=$(python scripts/generate_jobs.py --versions-json ./versions.json | jq -c .)
          echo "matrix=$matrix" >> "${GITHUB_OUTPUT}"

  build:
    name: Build
    needs: generate-jobs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-jobs.outputs.matrix) }}
      max-parallel: 1

    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64

      - name: Login | Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup | Docker metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/python
          tags: |
            type=raw,value=${{ matrix.version }}-${{ matrix.variant }}
            type=raw,value=${{ matrix.short_version }}-${{ matrix.variant }}

      - name: Build | Container image
        id: build
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: ${{ matrix.short_version }}/${{ matrix.variant }}
          labels: ${{ steps.metadata.outputs.labels }}
          tags: ${{ steps.metadata.outputs.tags }}
