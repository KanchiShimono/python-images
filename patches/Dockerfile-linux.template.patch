diff --git a/Dockerfile-linux.template b/Dockerfile-linux.template
index 8b5102b..28f01bf 100644
--- a/Dockerfile-linux.template
+++ b/Dockerfile-linux.template
@@ -1,19 +1,15 @@
+# https://raw.githubusercontent.com/docker-library/python/331890ef059fae05f84c652520b78c340526dc71/Dockerfile-linux.template
 {{
-	def is_alpine:
-		env.variant | startswith("alpine")
-	;
-	def is_slim:
-		env.variant | startswith("slim-")
+	def is_cuda:
+		env.variant | startswith("cuda-")
 	;
 	def rcVersion:
 		env.version | rtrimstr("-rc")
 -}}
-{{ if is_alpine then ( -}}
-FROM alpine:{{ env.variant | ltrimstr("alpine") }}
-{{ ) elif is_slim then ( -}}
-FROM debian:{{ env.variant | ltrimstr("slim-") }}-slim
+{{ if is_cuda then ( -}}
+FROM nvcr.io/nvidia/cuda:{{ env.variant | ltrimstr("cuda-") }}
 {{ ) else ( -}}
-FROM buildpack-deps:{{ env.variant }}
+FROM ubuntu:{{ env.variant }}
 {{ ) end -}}
 
 # ensure local python is preferred over distribution python
@@ -24,28 +20,19 @@ ENV PATH /usr/local/bin:$PATH
 ENV LANG C.UTF-8
 
 # runtime dependencies
-{{ if is_alpine then ( -}}
-RUN set -eux; \
-	apk add --no-cache \
-		ca-certificates \
-		tzdata \
-	;
-{{ ) else ( -}}
 RUN set -eux; \
 	apt-get update; \
+	DEBIAN_FRONTEND=NONINTERACTIVE apt-get install -y --no-install-recommends \
+		tzdata \
+	; \
 	apt-get install -y --no-install-recommends \
-{{ if is_slim then ( -}}
 		ca-certificates \
 		netbase \
-		tzdata \
-{{ ) else ( -}}
 		libbluetooth-dev \
 		tk-dev \
 		uuid-dev \
-{{ ) end -}}
 	; \
 	rm -rf /var/lib/apt/lists/*
-{{ ) end -}}
 
 ENV GPG_KEY {{
 	{
@@ -78,39 +65,6 @@ ENV PYTHON_VERSION {{ .version }}
 
 RUN set -eux; \
 	\
-{{ if is_alpine then ( -}}
-	apk add --no-cache --virtual .build-deps \
-		gnupg \
-		tar \
-		xz \
-		\
-		bluez-dev \
-		bzip2-dev \
-		dpkg-dev dpkg \
-		expat-dev \
-		findutils \
-		gcc \
-		gdbm-dev \
-		libc-dev \
-		libffi-dev \
-		libnsl-dev \
-		libtirpc-dev \
-		linux-headers \
-		make \
-		ncurses-dev \
-		openssl-dev \
-		pax-utils \
-		readline-dev \
-		sqlite-dev \
-		tcl-dev \
-		tk \
-		tk-dev \
-		util-linux-dev \
-		xz-dev \
-		zlib-dev \
-	; \
-	\
-{{ ) elif is_slim then ( -}}
 	savedAptMark="$(apt-mark showmanual)"; \
 	apt-get update; \
 	apt-get install -y --no-install-recommends \
@@ -137,7 +91,6 @@ RUN set -eux; \
 		zlib1g-dev \
 	; \
 	\
-{{ ) else "" end -}}
 	wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz"; \
 	wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc"; \
 	GNUPGHOME="$(mktemp -d)"; export GNUPGHOME; \
@@ -167,17 +120,9 @@ RUN set -eux; \
 		--without-ensurepip \
 	; \
 	nproc="$(nproc)"; \
-{{ if is_alpine then ( -}}
-# set thread stack size to 1MB so we don't segfault before we hit sys.getrecursionlimit()
-# https://github.com/alpinelinux/aports/commit/2026e1259422d4e0cf92391ca2d3844356c649d0
-	EXTRA_CFLAGS="-DTHREAD_STACK_SIZE=0x100000"; \
-{{ ) else ( -}}
 	EXTRA_CFLAGS="$(dpkg-buildflags --get CFLAGS)"; \
 	LDFLAGS="$(dpkg-buildflags --get LDFLAGS)"; \
-{{ ) end -}}
-{{ if is_slim or is_alpine then ( -}}
 	LDFLAGS="${LDFLAGS:--Wl},--strip-all"; \
-{{ ) else "" end -}}
 {{ if env.version == "3.7" then ( -}}
 # setting PROFILE_TASK makes "--enable-optimizations" reasonable: https://bugs.python.org/issue36044 / https://github.com/docker-library/python/issues/160#issuecomment-509426916
 	PROFILE_TASK='-m test.regrtest --pgo \
@@ -239,14 +184,12 @@ end
 		python \
 	; \
 	make install; \
-{{ if is_alpine or is_slim then "" else ( -}}
 	\
 # enable GDB to load debugging data: https://github.com/docker-library/python/pull/701
 	bin="$(readlink -ve /usr/local/bin/python3)"; \
 	dir="$(dirname "$bin")"; \
 	mkdir -p "/usr/share/gdb/auto-load/$dir"; \
 	cp -vL Tools/gdb/libpython.py "/usr/share/gdb/auto-load/$bin-gdb.py"; \
-{{ ) end -}}
 	\
 	cd /; \
 	rm -rf /usr/src/python; \
@@ -266,17 +209,7 @@ end
 		\) -exec rm -rf '{}' + \
 	; \
 	\
-{{ if is_alpine then ( -}}
-	find /usr/local -type f -executable -not \( -name '*tkinter*' \) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' \
-		| tr ',' '\n' \
-		| sort -u \
-		| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
-		| xargs -rt apk add --no-network --virtual .python-rundeps \
-	; \
-	apk del --no-network .build-deps; \
-{{ ) else ( -}}
 	ldconfig; \
-{{ if is_slim then ( -}}
 	\
 	apt-mark auto '.*' > /dev/null; \
 	apt-mark manual $savedAptMark; \
@@ -290,8 +223,6 @@ end
 	; \
 	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
 	rm -rf /var/lib/apt/lists/*; \
-{{ ) else "" end -}}
-{{ ) end -}}
 	\
 	python3 --version
 
@@ -314,22 +245,18 @@ ENV PYTHON_GET_PIP_SHA256 {{ .pip.sha256 }}
 
 RUN set -eux; \
 	\
-{{ if is_slim then ( -}}
 	savedAptMark="$(apt-mark showmanual)"; \
 	apt-get update; \
 	apt-get install -y --no-install-recommends wget; \
 	\
-{{ ) else "" end -}}
 	wget -O get-pip.py "$PYTHON_GET_PIP_URL"; \
 	echo "$PYTHON_GET_PIP_SHA256 *get-pip.py" | sha256sum -c -; \
 	\
-{{ if is_slim then ( -}}
 	apt-mark auto '.*' > /dev/null; \
 	[ -z "$savedAptMark" ] || apt-mark manual $savedAptMark > /dev/null; \
 	apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
 	rm -rf /var/lib/apt/lists/*; \
 	\
-{{ ) else "" end -}}
 	export PYTHONDONTWRITEBYTECODE=1; \
 	\
 	python get-pip.py \
